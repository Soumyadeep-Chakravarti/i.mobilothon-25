version: '3.8'

services:
  # 1. FastAPI API Server (Renamed from 'backend' to 'api' for consistency)
  api:
    build:
      context: .
      # Assuming the backend Dockerfile is at the root of the context (e.g., ./Dockerfile.cpu)
      dockerfile: ./backend/Dockerfile.cpu # Use the explicit path from the root
    image: v13-backend-api
    container_name: visiondrive_api # Updated container name
    ports:
      - "8000:8000"
    command: gunicorn src.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
    environment:
      # Use service name 'mongo' and 'redis' for connectivity
      MONGO_URI: "mongodb://mongo:27017/visiondrive"
      REDIS_URL: "redis://redis:6379/0"
      JWT_SECRET_KEY: "super-secret-development-key"
    volumes:
      - ./backend/app/src:/app/src # Keep source mount for development speed
    depends_on:
      - mongo
      - redis
    networks:
      - visiondrive_net

  # 2. Celery Worker (Task Layer Implementation - CRITICAL ADDITION)
  worker:
    build:
      context: .
      dockerfile: ./backend/Dockerfile.cpu
    image: v13-backend-worker
    container_name: visiondrive_worker
    # Command to run the Celery worker
    command: celery -A src.tasks.worker.celery_app worker -l info --pool=prefork --concurrency=2
    volumes:
      - ./backend/app/src:/app/src
    environment:
      MONGO_URI: "mongodb://mongo:27017/visiondrive"
      REDIS_URL: "redis://redis:6379/0" # Broker connectivity
    depends_on:
      - api
      - redis
    networks:
      - visiondrive_net

  # 3. Redis Cache/Broker (CRITICAL ADDITION)
  redis:
    image: redis:7.0-alpine
    container_name: visiondrive_redis
    ports:
      - "6379:6379"
    networks:
      - visiondrive_net

  # 4. Analytics Dashboard (Unchanged)
  analytics:
    build: ./analytics
    container_name: visiondrive_analytics
    ports:
      - "8501:8501"
    environment:
      MONGO_URI: "mongodb://mongo:27017/visiondrive"
    depends_on:
      - mongo
    networks:
      - visiondrive_net

  # 5. MongoDB Database (Modified to your pin)
  mongo:
    image: mongo:7 
    container_name: visiondrive_mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - visiondrive_net

volumes:
  mongo_data:

networks:
  visiondrive_net:
    driver: bridge
